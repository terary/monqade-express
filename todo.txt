

makeRouter and appendRoutes take no arguments.  This causes minor issue for test  - consider defaults 
but is there another value to it?
---
MonqadeExpressProxy  has a test interface that needs to be killed or otherwise dealt with
for production/ship
---
known issue
    chaos schema + doUpdateOne fails -> foreignID required --  although it is populated
    maybe something to do with schema options (chaos has none);
    foreignID -is objectID
---
make sure 404's are sent when appropriate - that code is wonky and needs help
--- 
create documents page for MiddleWareStack
--- 
    original error is there - need to verify it comes across the wire.
        query:{
            idxBucket:[{$gt:0}},{$lt:10}]
        },
    causes MongooseValidation error
    but original error is the generic message
    the actual message is something about unable to covert to number.

    MongooseValidation original error should have that message
---


*****************************************  done *********************************
- build few servers as examples

- test: routes are built as expected (test routes)  not as expected - not terrible user friendly - but in working order

- develop test servers 
- develop example servers
- rename things 'monqadeExpressProxy' MiddleWareStack-> MonqadeMiddlewareStack?
- implement example with common connection used with tests.
- change where mq stores the payload - should be in res.locals.[whatever]
- clean up tests

- finish documentation
- finish discovery

- add expand/collapse to documentation sections paths and path descriptions
- review and unfuck (maybe) payload in request params 
    to fetch payload body.params.payload.(JSON.parse(payload))
    I think there is one extra payload  - should maybe make code backwards compatible or revise all code

- findManyCount
- queryManyCount

- Next up -- clean/reorganize tests
    make clear when/where schema is created datbase connections etc
    if test require special dbConn,specialSchema etc let it happen in those tests.

- remove querybuilder, fakequery builder

- write test order of execution.  'use' -> enqueue 

- make sure test discovery and documentation return 200, no other tests to be done

- move test from partials to suites
---
give strong consideration to versioning of A) the app, B) collection schema
    seems app version should be:
        expample.com/miniappmount/collection/vX/function
    currently:
        expample.com/miniappmount/vX/collection/function
        semantically seems bestest - but intuitively seems backwards

    see convention statement for explain.  Basically both version (schema, app) are outside of scope
    of concern presently.  app versions will always be outside of schope.  Schema version concerns
    may be (unlikely) some future extension.

    Can create different miniApps same schema different schemaVersion - though not recommended 
---
    verify server adding 'use(... first)' 'use(... second )' 'use(... third)'  
    gets executed in order that appears
*** Test teh hell out of it.  Sometimes its a stack sometimes it a queue ***
--- 

**********************************************************************
Known Issue:
        ############# This works
        + chai-http@4.3.0
        + nodemon@1.19.1
        + mongoose@5.6.9
        + express@4.17.1

        ################## Causes Error "TypeError: this.$__getValue is not a function mongoose save"
        When doing save.
        "devDependencies": {
            "chai-http": "^4.2.1",
            "express": "^4.16.4",
            "mocha": "^5.2.0",
            "morgan": "^1.9.1",
            "nodemon": "^1.18.9"
            "mongoose": "^5.4.2",
        ########################################
        Need to detect/correct/shutdown versions issues
        the above issue is likely caused by mongoose versions
        ** strange because both versions of mongoose have been used and known to work. 
        ** the issue seems to be entirely using Monaqade + Mongoose and not likely related to the other packages.
        ** maybe could be that monqade-schema was developed using newer version of mongoose and monqade-express an older
        ** resulting in version mis-match????
        #########################
**********************************************************************
